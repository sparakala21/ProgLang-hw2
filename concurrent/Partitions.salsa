module concurrent;
import java.io.*;
import java.util.*;

behavior Partitions{
    // vars
    private int ActorName;
    private HashMap<Integer, Node> nodes = new HashMap<>();
    private Vector<String> colors = new Vector<>();

    Partition(int actor, String[] NodeList, String[] ColorList, String[] EdgeList){
        this.ActorName = actor;

        for(int i = 0; i < NodeList.length; i++) {
            Node node = new Node(Integer.parseInt(NodeList[i]), ColorList[i]);
            nodes.put(node.getId(), node);
        }

        for(String edge : EdgeList) {
            String[] ends = edge.split(",");
            Node start = nodes.get(Integer.parseInt(ends[0]));
            Node end = nodes.get(Integer.parseInt(ends[1]));
            
            int[] startNeighbors = start.getNeighbors();
            int[] newStartNeighbors = Arrays.copyOf(startNeighbors, startNeighbors.length + 1);
            newStartNeighbors[startNeighbors.length] = end.getId();
            start.setNeighbors(newStartNeighbors);
        }
    }

    // You might want to add other methods to interact with or query the Partition
}
